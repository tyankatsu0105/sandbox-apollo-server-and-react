extend type Query {
  users(page: PaginationInput, ids: [ID!]): [User]
  user(id: ID!): User
}

extend type Mutation {
  createUser(input: CreateUserInput!): CreateUserPayload!
  createUsers(input: [CreateUserInput!]!): CreateUsersPayload!
  deleteUser(input: DeleteUserInput!): DeleteUserPayload!
}

type User implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime
  "名前"
  name: String!
  "年齢"
  age: Int!
  "血液型"
  blood: Blood!
  "出身国"
  country: String
  "誕生日"
  birthDay: Date
}

input CreateUserInput {
  "名前"
  name: String!
  "年齢"
  age: Int!
  "血液型"
  blood: Blood!
}

type CreateUserPayload {
  user: User
}

type CreateUsersPayload {
  users: [User]
}

input DeleteUserInput {
  userID: ID!
}

type DeleteUserPayload {
  DeletedUserID: ID!
  user: User
}
